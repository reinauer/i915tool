/*
* This file is part of the coreboot project.
*
* Copyright 2013 Google Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/
/* generated code; do not edit*/#include <stdint.h>
#include <console/console.h>
#include <delay.h>
#include "i915io.h"
	int index;	u32 auxout[16];
	u8 auxin[20];
void runio(u32 aux_ctl, u32 aux_data, int verbose)
{

	printk(BIOS_SPEW, " M [drm] Memory usable by graphics device = 2048M");
	printk(BIOS_SPEW, " M i915 000000:02.0: setting latency timer to 64");
	printk(BIOS_SPEW, " M [drmi915_write32] *ERROR* Unknown unclaimed register before writing to c5100");
	WRITE32(0x00000000,0x100000);
	WRITE32(0x00000000,0x100008);
	WRITE32(0x00000000,0x100010);
	WRITE32(0x00000000,0x100018);
	WRITE32(0x00000000,0x100020);
	WRITE32(0x00000000,0x100028);
	WRITE32(0x00000000,0x100030);
	WRITE32(0x00000000,0x100038);
	WRITE32(0x00000000,0x100040);
	WRITE32(0x00000000,0x100048);
	WRITE32(0x00000000,0x100050);
	WRITE32(0x00000000,0x100058);
	WRITE32(0x00000000,0x100060);
	WRITE32(0x00000000,0x100068);
	WRITE32(0x00000000,0x100070);
	WRITE32(0x00000000,0x100078);
	if (verbose & vio) READ32(0x145004);
	if (verbose & vio) READ32(0x145008);
	printk(BIOS_SPEW, " M i915 000000:02.0: irq 46 for MSI/MSI-X");
	printk(BIOS_SPEW, " M [drm] Supports vblank timestamp caching Rev 1 (10.10.2010).");
	printk(BIOS_SPEW, " M [drm] Driver supports precise vblank timestamp query.");
	printk(BIOS_SPEW, " M i915 000000:02.0: Invalid ROM contents");
	printk(BIOS_SPEW, " M [drm] failed to find VBIOS tables");
	if (verbose & vio) READ32(0x145d10);
	if (verbose & vio) READ32(FORCEWAKE_MT_ACK);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	WRITE32(0x80000000,CPU_VGACNTRL);
	if (verbose & vio) READ32(PCH_LVDS);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(PCH_PP_ON_DELAYS);
	if (verbose & vio) READ32(PCH_PP_OFF_DELAYS);
	if (verbose & vio) READ32(PCH_PP_DIVISOR);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x0<<8|0x0|0x40000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x0<<28/*W*/|0x0<<8|0x0|0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x1<<28/*R*/|DP_DPCD_REV<<8|0xe|0x9000000e;
printk(BIOS_SPEW, "DP_DPCD_REV");
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 14);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	WRITE32( PANEL_PORT_SELECT_LVDS |(/* PANEL_POWER_UP_DELAY_MASK */0x7d0<<16)|(/* PANEL_LIGHT_ON_DELAY_MASK */0xa<<0)|0x07d0000a,PCH_PP_ON_DELAYS);
	WRITE32((/* PANEL_POWER_DOWN_DELAY_MASK */0x1388<<16)|(/* PANEL_LIGHT_OFF_DELAY_MASK */0x1f4<<0)|0x138801f4,PCH_PP_OFF_DELAYS);
	WRITE32(0x0004af06,PCH_PP_DIVISOR);
	if (verbose & vio) READ32(PCH_PP_DIVISOR);
	if (verbose & vio) READ32(PCH_PP_OFF_DELAYS);
	if (verbose & vio) READ32(PCH_PP_ON_DELAYS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	auxout[1] = 0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x1<<28/*R*/|0x50<<8|0x0|0x10005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	auxout[1] = 0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x1<<28/*R*/|0x50<<8|0x0|0x10005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL);
	if (verbose & vio) READ32(BLC_PWM_PCH_CTL2);
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL);
	if (verbose & vio) READ32(_FDI_RXB_CHICKEN+0x4);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x40000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000000,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd235000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(0x120010);
	if (verbose & vio) READ32(DISP_ARB_CTL);
	WRITE32( DISP_TILE_SURFACE_SWIZZLING | SDE_AUDIO_POWER_C | SDE_AUDIO_POWER_B |( SDE_AUDIO_POWER_SHIFT &0x10)| SDE_AUDIO_HDCP_TRANSA | SDE_AUDIO_TRANSB | SDE_FDI_RXB | SDE_SDVOB_HOTPLUG | SDE_TRANSA_CRC_DONE | SDE_TRANSA_CRC_ERR |0x16663056,DISP_ARB_CTL);
	if (verbose & vio) READ32(0x101000);
	WRITE32(0x00000001,0x101000);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000000,GEN6_BSD_RING_BASE+0x3c);
	WRITE32(0x00000000,GEN6_BSD_RING_BASE+0x34);
	WRITE32(0x00000000,GEN6_BSD_RING_BASE+0x30);
	if (verbose & vio) READ32(GEN6_BSD_RING_BASE+0x34);
	WRITE32(0x00023000,GEN6_BSD_RING_BASE+0x38);
	WRITE32(0x0001f001,GEN6_BSD_RING_BASE+0x3c);
	if (verbose & vio) READ32(GEN6_BSD_RING_BASE+0x3c);
	if (verbose & vio) READ32(GEN6_BSD_RING_BASE+0x38);
	if (verbose & vio) READ32(GEN6_BSD_RING_BASE+0x34);
	if (verbose & vio) READ32(GEN6_BSD_RING_BASE+0x30);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x00000000,BLT_RING_BASE+0x3c);
	WRITE32(0x00000000,BLT_RING_BASE+0x34);
	WRITE32(0x00000000,BLT_RING_BASE+0x30);
	if (verbose & vio) READ32(BLT_RING_BASE+0x34);
	WRITE32(0x00044000,BLT_RING_BASE+0x38);
	WRITE32(0x0001f001,BLT_RING_BASE+0x3c);
	if (verbose & vio) READ32(BLT_RING_BASE+0x3c);
	if (verbose & vio) READ32(BLT_RING_BASE+0x38);
	if (verbose & vio) READ32(BLT_RING_BASE+0x34);
	if (verbose & vio) READ32(BLT_RING_BASE+0x30);
	WRITE32(0x00000001,0x101008);
	WRITE32(0x02000200,0x1229c);
	WRITE32(0xffffffff,0x12220);
	WRITE32(0x7fe00000,0x12228);
	WRITE32(0x02000200,0x2229c);
	WRITE32(0xffffffff,0x22220);
	WRITE32(0x7fe00000,0x22228);
	if (verbose & vio) READ32(0x45400);
	if (verbose & vio) READ32(0x45404);
	if (verbose & vio) READ32(0x4540c);
	WRITE32(0x00ffffff,0x64e00);
	WRITE32(0x0006000e,0x64e04);
	WRITE32(0x00d75fff,0x64e08);
	WRITE32(0x0005000a,0x64e0c);
	WRITE32(0x00c30fff,0x64e10);
	WRITE32(0x00040006,0x64e14);
	WRITE32(0x80aaafff,0x64e18);
	WRITE32(0x000b0000,0x64e1c);
	WRITE32(0x00ffffff,0x64e20);
	WRITE32(0x0005000a,0x64e24);
	WRITE32(0x00d75fff,0x64e28);
	WRITE32(0x000c0004,0x64e2c);
	WRITE32(0x80c30fff,0x64e30);
	WRITE32(0x000b0000,0x64e34);
	WRITE32(0x00ffffff,0x64e38);
	WRITE32(0x00040006,0x64e3c);
	WRITE32(0x80d75fff,0x64e40);
	WRITE32(0x000b0000,0x64e44);
	WRITE32(0x00ffffff,0x64e48);
	WRITE32(0x00040006,0x64e4c);
	WRITE32(0x00ffffff,0x64e60);
	WRITE32(0x0006000e,0x64e64);
	WRITE32(0x00d75fff,0x64e68);
	WRITE32(0x0005000a,0x64e6c);
	WRITE32(0x00c30fff,0x64e70);
	WRITE32(0x00040006,0x64e74);
	WRITE32(0x80aaafff,0x64e78);
	WRITE32(0x000b0000,0x64e7c);
	WRITE32(0x00ffffff,0x64e80);
	WRITE32(0x0005000a,0x64e84);
	WRITE32(0x00d75fff,0x64e88);
	WRITE32(0x000c0004,0x64e8c);
	WRITE32(0x80c30fff,0x64e90);
	WRITE32(0x000b0000,0x64e94);
	WRITE32(0x00ffffff,0x64e98);
	WRITE32(0x00040006,0x64e9c);
	WRITE32(0x80d75fff,0x64ea0);
	WRITE32(0x000b0000,0x64ea4);
	WRITE32(0x00ffffff,0x64ea8);
	WRITE32(0x00040006,0x64eac);
	WRITE32(0x00ffffff,0x64ec0);
	WRITE32(0x0006000e,0x64ec4);
	WRITE32(0x00d75fff,0x64ec8);
	WRITE32(0x0005000a,0x64ecc);
	WRITE32(0x00c30fff,0x64ed0);
	WRITE32(0x00040006,0x64ed4);
	WRITE32(0x80aaafff,0x64ed8);
	WRITE32(0x000b0000,0x64edc);
	WRITE32(0x00ffffff,0x64ee0);
	WRITE32(0x0005000a,0x64ee4);
	WRITE32(0x00d75fff,0x64ee8);
	WRITE32(0x000c0004,0x64eec);
	WRITE32(0x80c30fff,0x64ef0);
	WRITE32(0x000b0000,0x64ef4);
	WRITE32(0x00ffffff,0x64ef8);
	WRITE32(0x00040006,0x64efc);
	WRITE32(0x80d75fff,0x64f00);
	WRITE32(0x000b0000,0x64f04);
	WRITE32(0x00ffffff,0x64f08);
	WRITE32(0x00040006,0x64f0c);
	WRITE32(0x00ffffff,0x64f20);
	WRITE32(0x0006000e,0x64f24);
	WRITE32(0x00d75fff,0x64f28);
	WRITE32(0x0005000a,0x64f2c);
	WRITE32(0x00c30fff,0x64f30);
	WRITE32(0x00040006,0x64f34);
	WRITE32(0x80aaafff,0x64f38);
	WRITE32(0x000b0000,0x64f3c);
	WRITE32(0x00ffffff,0x64f40);
	WRITE32(0x0005000a,0x64f44);
	WRITE32(0x00d75fff,0x64f48);
	WRITE32(0x000c0004,0x64f4c);
	WRITE32(0x80c30fff,0x64f50);
	WRITE32(0x000b0000,0x64f54);
	WRITE32(0x00ffffff,0x64f58);
	WRITE32(0x00040006,0x64f5c);
	WRITE32(0x80d75fff,0x64f60);
	WRITE32(0x000b0000,0x64f64);
	WRITE32(0x00ffffff,0x64f68);
	WRITE32(0x00040006,0x64f6c);
	WRITE32(0x00ffffff,0x64f80);
	WRITE32(0x0007000e,0x64f84);
	WRITE32(0x00d75fff,0x64f88);
	WRITE32(0x000f000a,0x64f8c);
	WRITE32(0x00c30fff,0x64f90);
	WRITE32(0x00060006,0x64f94);
	WRITE32(0x00aaafff,0x64f98);
	WRITE32(0x001e0000,0x64f9c);
	WRITE32(0x00ffffff,0x64fa0);
	WRITE32(0x000f000a,0x64fa4);
	WRITE32(0x00d75fff,0x64fa8);
	WRITE32(0x00160004,0x64fac);
	WRITE32(0x00c30fff,0x64fb0);
	WRITE32(0x001e0000,0x64fb4);
	WRITE32(0x00ffffff,0x64fb8);
	WRITE32(0x00060006,0x64fbc);
	WRITE32(0x00d75fff,0x64fc0);
	WRITE32(0x001e0000,0x64fc4);
	WRITE32(0x00ffffff,0x64fc8);
	WRITE32(0x00040006,0x64fcc);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM3_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM2_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM1_LP_ILK);
	WRITE32(0x00002000,0x9404);
	WRITE32(0x3c4fff8c,0xb01c);
	WRITE32(0x20000000,GEN7_L3_CHICKEN_MODE_REGISTER);
	if (verbose & vio) READ32(GEN7_SQ_CHICKEN_MBCUNIT_CONFIG);
	WRITE32(0x00000c00,GEN7_SQ_CHICKEN_MBCUNIT_CONFIG);
	if (verbose & vio) READ32(_DSPACNTR);
	WRITE32( DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000,_DSPACNTR);
	if (verbose & vio) READ32(_DSPASIZE+0xc);
	WRITE32(0x00000000,_DSPASIZE+0xc);
	if (verbose & vio) READ32(_DSPBCNTR);
	WRITE32(0x00004000,_DSPBCNTR);
	if (verbose & vio) READ32(_DSPBSURF);
	WRITE32(0x00000000,_DSPBSURF);
	if (verbose & vio) READ32(_DVSACNTR);
	WRITE32( DVS_TRICKLE_FEED_DISABLE |0x00004000,_DVSACNTR);
	if (verbose & vio) READ32(_DVSASURF);
	WRITE32(0x00000000,_DVSASURF);
	if (verbose & vio) READ32(GEN6_MBCTL);
	WRITE32(0x00000010,GEN6_MBCTL);
	if (verbose & vio) READ32(0x45280);
	WRITE32(0x80000007,0x45280);
	if (verbose & vio) READ32(SOUTH_DSPCLK_GATE_D);
	WRITE32(0x00001000,SOUTH_DSPCLK_GATE_D);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_PIPEBCONF);
	if (verbose & vio) READ32(0x72008);
	if (verbose & vio) READ32(0x46100);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(0x7f008);
	WRITE32(0xc0000000,0x7f008);
	if (verbose & vio) READ32(_PIPEBCONF);
	WRITE32(0x00000000,_PIPEBCONF);
	if (verbose & vio) READ32(0x72008);
	WRITE32(0x00000000,0x72008);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_PIPEBCONF);
	if (verbose & vio) READ32(0x72008);
	WRITE32(0xffffffff,DEIMR);
	WRITE32(0x00000000,DEIER);
	WRITE32(0xffffffff,GTIMR);
	WRITE32(0x00000000,GTIER);
	WRITE32(0xffffffff,SDEIMR);
	WRITE32(0x00000000,SDEIER);
	WRITE32(0x4fffdef7,DEIMR);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529,DEIER);
	if (verbose & vio) READ32(GTIIR);
	WRITE32(0x00000000,GTIIR);
	WRITE32(0xffffffdf,GTIMR);
	WRITE32(0x00401021,GTIER);
	WRITE32(0xff17ffff,SDEIMR);
	WRITE32(0x00e80000,SDEIER);
	if (verbose & vio) READ32(SDEISR+0x30);
	WRITE32( PORTD_HOTPLUG_ENABLE | PORTC_HOTPLUG_ENABLE | PORTB_HOTPLUG_ENABLE |0x10101010,SDEISR+0x30);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPB_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPB_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPB_AUX_CH_CTL);
	if (verbose & vio) READ32(DEIER);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529,DEIER);
	if (verbose & vio) READ32(GTIIR);
	if (verbose & vio) READ32(GEN6_PMIIR);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529,DEIER);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_RAWCLK_FREQ);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x9000000e,PCH_DPC_AUX_CH_DATA1);
	WRITE32(0xd245000c,PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	if (verbose & vio) READ32(PCH_DPC_AUX_CH_CTL);
	WRITE32(0x5345000c,PCH_DPC_AUX_CH_CTL);
	WRITE32(0x00000001,0x101008);
	printk(BIOS_SPEW, " M fbcon inteldrmfb (fb0) is primary device");
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL);
	WRITE32(0x03a90000,BLC_PWM_CPU_CTL);
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL2);
	WRITE32(0x00000000,BLC_PWM_CPU_CTL2);
	if (verbose & vio) READ32(BLC_PWM_PCH_CTL1);
	WRITE32(0x00000000,BLC_PWM_PCH_CTL1);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(_DSPACNTR);
	WRITE32( DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000,_DSPACNTR);
	if (verbose & vio) READ32(_DSPASIZE+0xc);
	WRITE32(0x00000000,_DSPASIZE+0xc);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(DEIER);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529,DEIER);
	if (verbose & vio) READ32(GTIIR);
	if (verbose & vio) READ32(GEN6_PMIIR);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529,DEIER);
	if (verbose & vio) READ32(_DSPACNTR);
	if (verbose & vio) READ32(0x7f008);
	WRITE32(0x40000000,0x7f008);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(0x6f400);
	WRITE32(0x02034002,0x6f400);
	WRITE32(0x00000000,_PFA_CTL_1);
	WRITE32(0x00000000,_PFA_WIN_SZ);
	if (verbose & vio) READ32(DP_A);
	WRITE32( DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x00000013,DP_A);
	if (verbose & vio) READ32(DP_A+0x40);
	WRITE32(0x00000000,DP_A+0x40);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	printk(BIOS_SPEW, " M tsc Refined TSC clocksource calibration: 1296.997 MHz");
	printk(BIOS_SPEW, " M Switching to clocksource tsc");
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	WRITE32(0xe0000000,0x46100);
	if (verbose & vio) READ32(0x145d10);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM3_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM2_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM1_LP_ILK);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_DSPACNTR);
	WRITE32(0x00000000,0x6f028);
	WRITE32(0x081f077f,0x6f000);
	WRITE32(0x081f077f,0x6f004);
	WRITE32(0x07cb07ad,0x6f008);
	WRITE32(0x04570437,0x6f00c);
	WRITE32(0x04570437,0x6f010);
	WRITE32(0x043d0439,0x6f014);
	WRITE32(0x077f0437,_PIPEASRC);
	WRITE32(0x7e32d2a0,0x6f030);
	WRITE32(0x0041eb00,0x6f034);
	WRITE32(0x00021e1c,0x6f040);
	WRITE32(0x00041eb0,0x6f044);
	if (verbose & vio) READ32(0x7f008);
	WRITE32(0x00000000,0x7f008);
	WRITE32( DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000,_DSPACNTR);
	if (verbose & vio) READ32(_DSPACNTR);
	WRITE32( DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000,_DSPACNTR);
	WRITE32(0x00001e00,_DSPASTRIDE);
	if (verbose & vio) READ32(_DSPASIZE+0xc);
	WRITE32(0x00074000,_DSPASIZE+0xc);
	WRITE32(0x00000000,_DSPACNTR+0x24);
	if (verbose & vio) READ32(0x145d10);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM3_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM2_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM1_LP_ILK);
	if (verbose & vio) READ32(WM0_PIPEC_IVB+0x70);
	WRITE32(0x00000038,WM0_PIPEC_IVB+0x70);
	if (verbose & vio) READ32(0x145d10);
	if (verbose & vio) READ32(WM0_PIPEA_ILK);
	WRITE32(0x000f3806,WM0_PIPEA_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM3_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM2_LP_ILK);
	WRITE32((/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000,WM1_LP_ILK);
	if (verbose & vio) READ32(0x145d10);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	WRITE32(0x00000000,0xa094);
	if (verbose & vio) READ32(0x120000);
	if (verbose & vio) READ32(0x145998);
	if (verbose & vio) READ32(0x145948);
	WRITE32(0x00000000,0xa090);
	WRITE32(0x03e80000,0xa098);
	WRITE32(0x0028001e,0xa09c);
	WRITE32(0x0000001e,0xa0a0);
	WRITE32(0x0001e848,0xa0a8);
	WRITE32(0x00000019,0xa0ac);
	WRITE32(0x0000000a,GEN6_BSD_SLEEP_PSMI_CONTROL+0x4);
	WRITE32(0x0000000a,BLT_RING_BASE+0x54);
	WRITE32(0x00000000,0xa0b0);
	WRITE32(0x000003e8,0xa0b4);
	WRITE32(0x0000c350,0xa0b8);
	WRITE32(0x000186a0,0xa0bc);
	WRITE32(0x0000fa00,0xa0c0);
	printk(BIOS_SPEW, " M [drm] Enabling RC6 states RC6 on, RC6p off, RC6pp off");
	WRITE32(0x88040000,0xa090);
	WRITE32(0x14000000,_PALETTE_A+0x8);
	WRITE32(0x18000000,_PALETTE_A+0xc);
	WRITE32(0x000f4240,_PALETTE_A+0x10);
	WRITE32(0x14040000,_PALETTE_A+0x14);
	WRITE32(0x0000e808,_PALETTE_A+0x2c);
	WRITE32(0x0003bd08,_PALETTE_A+0x30);
	WRITE32(0x000101d0,_PALETTE_A+0x68);
	WRITE32(0x00055730,_PALETTE_A+0x6c);
	WRITE32(0x0000000a,_PALETTE_A+0x70);
	WRITE32(0x00000d92,_PALETTE_A+0x24);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	WRITE32(0x8000000c,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138128);
	WRITE32(0x00000000,0x138128);
	WRITE32(0x20000000,_PALETTE_A+0x8);
	WRITE32(0x14000000,_PALETTE_A+0x14);
	WRITE32( GEN6_PM_RP_DOWN_TIMEOUT | GEN6_PM_RP_UP_THRESHOLD | GEN6_PM_RP_DOWN_THRESHOLD |0x00000070,GEN6_PMIER);
	WRITE32(0x00000000,GEN6_PMISR+0x4);
	WRITE32(0x00000000,0xa168);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	WRITE32(0x80000005,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138128);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000d14,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000c13,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000b12,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000a11,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000910,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080f,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080e,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080d,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080c,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080b,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x0000080a,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000809,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000808,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000807,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000806,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000805,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000804,0x138128);
	WRITE32(0x80000008,0x138124);
	if (verbose & vio) READ32(0x138124);
	if (verbose & vio) READ32(0x138124);
	WRITE32(0x00000000,0x138128);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	WRITE32(0x20000000,0x46100);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_SET_POWER<<8|0x0|0x80060000;
printk(BIOS_SPEW, "DP_SET_POWER");
	auxout[1] = 0x01000000;
	/* DP_SET_POWER_D0 | DP_PSR_SINK_INACTIVE |0x00000001*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	if (verbose & vio) READ32(DP_A+0x40);
	WRITE32(0x80000080,DP_A+0x40);
	WRITE32( DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002,DP_A);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_LINK_BW_SET<<8|0x8|0x80010008;
printk(BIOS_SPEW, "DP_LINK_BW_SET");
	auxout[1] = 0x0a020000;
	/*( DP_LINK_BW_2_7 &0xa)|0x0000020a*/
	auxout[2] = 0x00000000;
	auxout[3] = 0x01000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 13, auxin, 0);
	if (verbose & vio) READ32(DP_A+0x40);
	WRITE32(0x80000080,DP_A+0x40);
	WRITE32( DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002,DP_A);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
printk(BIOS_SPEW, "DP_TRAINING_PATTERN_SET");
	auxout[1] = 0x21000000;
	/* DP_TRAINING_PATTERN_1 | DP_LINK_SCRAMBLING_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000021*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_LANE0_SET<<8|0x1|0x80010301;
printk(BIOS_SPEW, "DP_TRAINING_LANE0_SET");
	auxout[1] = 0x00000000;
	/* DP_TRAIN_VOLTAGE_SWING_400 | DP_TRAIN_PRE_EMPHASIS_0 |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 6, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x1<<28/*R*/|DP_LANE0_1_STATUS<<8|0x5|0x90020205;
printk(BIOS_SPEW, "DP_LANE0_1_STATUS");
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 5);
	if (verbose & vio) READ32(DP_A+0x40);
	WRITE32(0x80000180,DP_A+0x40);
	WRITE32( DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002,DP_A);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
printk(BIOS_SPEW, "DP_TRAINING_PATTERN_SET");
	auxout[1] = 0x22000000;
	/* DP_TRAINING_PATTERN_2 | DP_LINK_SCRAMBLING_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000022*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_LANE0_SET<<8|0x1|0x80010301;
printk(BIOS_SPEW, "DP_TRAINING_LANE0_SET");
	auxout[1] = 0x00000000;
	/* DP_TRAIN_VOLTAGE_SWING_400 | DP_TRAIN_PRE_EMPHASIS_0 |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 6, auxin, 0);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x1<<28/*R*/|DP_LANE0_1_STATUS<<8|0x5|0x90020205;
printk(BIOS_SPEW, "DP_LANE0_1_STATUS");
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 5);
	if (verbose & vio) READ32(DP_A+0x40);
	WRITE32(0x80000200,DP_A+0x40);
	if (verbose & vio) READ32(DP_A+0x44);
	printk(BIOS_SPEW, " M [drmintel_dp_set_link_train] *ERROR* Timed out waiting for DP idle patterns");
	printk(BIOS_SPEW, " M [drmi915_write32] *ERROR* Unknown unclaimed register before writing to 64040");
	WRITE32(0x80000300,DP_A+0x40);
	WRITE32( DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002,DP_A);
	if (verbose & vio) READ32(PCH_PP_STATUS);
	if (verbose & vio) READ32(ILK_DISPLAY_CHICKEN_FUSES);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
printk(BIOS_SPEW, "DP_TRAINING_PATTERN_SET");
	auxout[1] = 0x00000000;
	/* DP_TRAINING_PATTERN_DISABLE | DP_LINK_QUAL_PATTERN_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
palette()
	WRITE32(0x00000021,0x6f410);
	WRITE32(0x82004002,0x6f400);
	if (verbose & vio) READ32(DEIER);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529,DEIER);
	if (verbose & vio) READ32(GTIIR);
	if (verbose & vio) READ32(GEN6_PMIIR);
	WRITE32(0x00000004,GEN6_PMIIR);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529,DEIER);
	if (verbose & vio) READ32(0x7f008);
	WRITE32(0x80000000,0x7f008);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_DSPACNTR);
	WRITE32( DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000,_DSPACNTR);
	if (verbose & vio) READ32(_DSPASIZE+0xc);
	WRITE32(0x00074000,_DSPASIZE+0xc);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(DEIER);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529,DEIER);
	if (verbose & vio) READ32(GTIIR);
	if (verbose & vio) READ32(GEN6_PMIIR);
	WRITE32(0x00000004,GEN6_PMIIR);
	WRITE32( GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529,DEIER);
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL2);
	WRITE32(0x00000000,BLC_PWM_CPU_CTL2);
	WRITE32( PWM_ENABLE |0x80000000,BLC_PWM_CPU_CTL2);
	if (verbose & vio) READ32(BLC_PWM_PCH_CTL1);
	WRITE32( PWM_PCH_ENABLE |0x80000000,BLC_PWM_PCH_CTL1);
	if (verbose & vio) READ32(BLC_PWM_CPU_CTL);
	WRITE32(0x03a903a9,BLC_PWM_CPU_CTL);
	if (verbose & vio) READ32(_PIPEA_FRMCOUNT_GM45);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(DP_A);
	if (verbose & vio) READ32(0x6f400);
	if (verbose & vio) READ32(DP_B);
	if (verbose & vio) READ32(DP_C);
	if (verbose & vio) READ32(0x7f008);
	if (verbose & vio) READ32(_PIPEBCONF);
	if (verbose & vio) READ32(0x72008);
palette()
	if (verbose & vio) READ32(0x0);
palette()
	if (verbose & vio) READ32(0x0);
	printk(BIOS_SPEW, " M i915 000000:02.0: registered panic notifier");
	printk(BIOS_SPEW, " M [drm] Initialized i915 1.6.0 20080730 for 000000:02.0 on minor 0");
}

