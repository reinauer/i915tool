/*
* This file is part of the coreboot project.
*
* Copyright 2013 Google Inc.
*
* This program is free software; you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; version 2 of the License.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program; if not, write to the Free Software
* Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
*/
#include <stdint.h>
#include "i915io.h"

const struct iodef iodefs[] = {
  {V,0},

{M, 1, " M [drm] Memory usable by graphics device = 2048M", 0x0, 0x0, 0},
{M, 1, " M i915 000000:02.0: setting latency timer to 64", 0x0, 0x0, 0},
{M, 1, " M [drmi915_write32] *ERROR* Unknown unclaimed register before writing to c5100", 0x0, 0x0, 0},
{GWl, 1, "", 0x100000, 0x00000000, 0},
{GWl, 1, "", 0x100008, 0x00000000, 0},
{GWl, 1, "", 0x100010, 0x00000000, 0},
{GWl, 1, "", 0x100018, 0x00000000, 0},
{GWl, 1, "", 0x100020, 0x00000000, 0},
{GWl, 1, "", 0x100028, 0x00000000, 0},
{GWl, 1, "", 0x100030, 0x00000000, 0},
{GWl, 1, "", 0x100038, 0x00000000, 0},
{GWl, 1, "", 0x100040, 0x00000000, 0},
{GWl, 1, "", 0x100048, 0x00000000, 0},
{GWl, 1, "", 0x100050, 0x00000000, 0},
{GWl, 1, "", 0x100058, 0x00000000, 0},
{GWl, 1, "", 0x100060, 0x00000000, 0},
{GWl, 1, "", 0x100068, 0x00000000, 0},
{GWl, 1, "", 0x100070, 0x00000000, 0},
{GWl, 1, "", 0x100078, 0x00000000, 0},
{GRl, 1, "", 0x145004, 0x00780008, 0},
{GRl, 1, "", 0x145008, 0x00780008, 0},
{M, 1, " M i915 000000:02.0: irq 46 for MSI/MSI-X", 0x0, 0x0, 0},
{M, 1, " M [drm] Supports vblank timestamp caching Rev 1 (10.10.2010).", 0x0, 0x0, 0},
{M, 1, " M [drm] Driver supports precise vblank timestamp query.", 0x0, 0x0, 0},
{M, 1, " M i915 000000:02.0: Invalid ROM contents", 0x0, 0x0, 0},
{M, 1, " M [drm] failed to find VBIOS tables", 0x0, 0x0, 0},
{GRl, 1, "", 0x145d10, 0x05a2404f, 0},
{GRl, 1, "", FORCEWAKE_MT_ACK, 0x40000006, 0},
{GRl, 300, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{GWl, 1, "", CPU_VGACNTRL, 0x80000000, 0},
{GRl, 1, "", PCH_LVDS, 0x00000000, 0},
{GRl, 2, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 1, "", PCH_PP_CONTROL,  EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0x00000007, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0007, 0},
{GRl, 1, "", PCH_PP_ON_DELAYS,  PANEL_PORT_SELECT_LVDS |(/* PANEL_POWER_UP_DELAY_MASK */0x7d0<<16)|(/* PANEL_LIGHT_ON_DELAY_MASK */0xa<<0)|0x07d0000a, 0},
{GRl, 1, "", PCH_PP_OFF_DELAYS, (/* PANEL_POWER_DOWN_DELAY_MASK */0x0<<16)|(/* PANEL_LIGHT_OFF_DELAY_MASK */0x0<<0)|0x00000000, 0},
{GRl, 1, "", PCH_PP_DIVISOR, 0x0004af06, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0007, 0},
{GRl, 1, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0007, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000f, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000f, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,1},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,2},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000f, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,3},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GWl, 1, "", PCH_PP_ON_DELAYS,  PANEL_PORT_SELECT_LVDS |(/* PANEL_POWER_UP_DELAY_MASK */0x7d0<<16)|(/* PANEL_LIGHT_ON_DELAY_MASK */0xa<<0)|0x07d0000a, 0},
{GWl, 1, "", PCH_PP_OFF_DELAYS, (/* PANEL_POWER_DOWN_DELAY_MASK */0x1388<<16)|(/* PANEL_LIGHT_OFF_DELAY_MASK */0x1f4<<0)|0x138801f4, 0},
{GWl, 1, "", PCH_PP_DIVISOR, 0x0004af06, 0},
{GRl, 1, "", PCH_PP_DIVISOR, 0x0004af06, 0},
{GRl, 1, "", PCH_PP_OFF_DELAYS, (/* PANEL_POWER_DOWN_DELAY_MASK */0x1388<<16)|(/* PANEL_LIGHT_OFF_DELAY_MASK */0x1f4<<0)|0x138801f4, 0},
{GRl, 1, "", PCH_PP_ON_DELAYS,  PANEL_PORT_SELECT_LVDS |(/* PANEL_POWER_UP_DELAY_MASK */0x7d0<<16)|(/* PANEL_LIGHT_ON_DELAY_MASK */0xa<<0)|0x07d0000a, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000f, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,4},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,5},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,6},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,7},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,8},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,9},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,10},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,11},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,12},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,13},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,14},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,15},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,16},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,17},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,18},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,19},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,20},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,21},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,22},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,23},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,24},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,25},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,26},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,27},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,28},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,29},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,30},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,31},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,32},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,33},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,34},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,35},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,36},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,37},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,38},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,39},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,40},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,41},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,42},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,43},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,44},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,45},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,46},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,47},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,48},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,49},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,50},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,51},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,52},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,53},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,54},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,55},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,56},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,57},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,58},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,59},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,60},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,61},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,62},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,63},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,64},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,65},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,66},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,67},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,68},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,69},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,70},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,71},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,72},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,73},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,74},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,75},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,76},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,77},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,78},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,79},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,80},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,81},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,82},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,83},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,84},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,85},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,86},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,87},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,88},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,89},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,90},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,91},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,92},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,93},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,94},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,95},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,96},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,97},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,98},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,99},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,100},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,101},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,102},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,103},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,104},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,105},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,106},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,107},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,108},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,109},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,110},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,111},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,112},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,113},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,114},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,115},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,116},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,117},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,118},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,119},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,120},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,121},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,122},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,123},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,124},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,125},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,126},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,127},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,128},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,129},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,130},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,131},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,132},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,133},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,134},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,135},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,136},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,137},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,138},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,139},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,140},
{GRl, 1, "", BLC_PWM_CPU_CTL, 0x03a903a9, 0},
{GRl, 1, "", BLC_PWM_PCH_CTL2, 0x03a903a9, 0},
{GRl, 1, "", BLC_PWM_CPU_CTL, 0x03a903a9, 0},
{GRl, 1, "", _FDI_RXB_CHICKEN+0x4, 0x00000006, 0},
{GRl, 1, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", 0x120010, 0x00000000, 0},
{GRl, 1, "", DISP_ARB_CTL,  SDE_AUDIO_POWER_C | SDE_AUDIO_POWER_B |( SDE_AUDIO_POWER_SHIFT &0x10)| SDE_AUDIO_HDCP_TRANSA | SDE_AUDIO_TRANSB | SDE_FDI_RXB | SDE_SDVOB_HOTPLUG | SDE_TRANSA_CRC_DONE | SDE_TRANSA_CRC_ERR |0x16661056, 0},
{GWl, 1, "", DISP_ARB_CTL,  DISP_TILE_SURFACE_SWIZZLING | SDE_AUDIO_POWER_C | SDE_AUDIO_POWER_B |( SDE_AUDIO_POWER_SHIFT &0x10)| SDE_AUDIO_HDCP_TRANSA | SDE_AUDIO_TRANSB | SDE_FDI_RXB | SDE_SDVOB_HOTPLUG | SDE_TRANSA_CRC_DONE | SDE_TRANSA_CRC_ERR |0x16663056, 0},
{GRl, 1, "", 0x101000, 0x00000000, 0},
{GWl, 1, "", 0x101000, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", GEN6_BSD_RING_BASE+0x3c, 0x00000000, 0},
{GWl, 1, "", GEN6_BSD_RING_BASE+0x34, 0x00000000, 0},
{GWl, 1, "", GEN6_BSD_RING_BASE+0x30, 0x00000000, 0},
{GRl, 1, "", GEN6_BSD_RING_BASE+0x34, 0x00000000, 0},
{GWl, 1, "", GEN6_BSD_RING_BASE+0x38, 0x00023000, 0},
{GWl, 1, "", GEN6_BSD_RING_BASE+0x3c, 0x0001f001, 0},
{GRl, 1, "", GEN6_BSD_RING_BASE+0x3c, 0x0001f001, 0},
{GRl, 1, "", GEN6_BSD_RING_BASE+0x38, 0x00023000, 0},
{GRl, 2, "", GEN6_BSD_RING_BASE+0x34, 0x00000000, 0},
{GRl, 1, "", GEN6_BSD_RING_BASE+0x30, 0x00000000, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", BLT_RING_BASE+0x3c, 0x00000000, 0},
{GWl, 1, "", BLT_RING_BASE+0x34, 0x00000000, 0},
{GWl, 1, "", BLT_RING_BASE+0x30, 0x00000000, 0},
{GRl, 1, "", BLT_RING_BASE+0x34, 0x00000000, 0},
{GWl, 1, "", BLT_RING_BASE+0x38, 0x00044000, 0},
{GWl, 1, "", BLT_RING_BASE+0x3c, 0x0001f001, 0},
{GRl, 1, "", BLT_RING_BASE+0x3c, 0x0001f001, 0},
{GRl, 1, "", BLT_RING_BASE+0x38, 0x00044000, 0},
{GRl, 2, "", BLT_RING_BASE+0x34, 0x00000000, 0},
{GRl, 1, "", BLT_RING_BASE+0x30, 0x00000000, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{GWl, 1, "", 0x1229c, 0x02000200, 0},
{GWl, 1, "", 0x12220, 0xffffffff, 0},
{GWl, 1, "", 0x12228, 0x7fe00000, 0},
{GWl, 1, "", 0x2229c, 0x02000200, 0},
{GWl, 1, "", 0x22220, 0xffffffff, 0},
{GWl, 1, "", 0x22228, 0x7fe00000, 0},
{GRl, 1, "", 0x45400, 0xc0000000, 0},
{GRl, 1, "", 0x45404, 0x40000000, 0},
{GRl, 1, "", 0x4540c, 0x40000000, 0},
{GWl, 1, "", 0x64e00, 0x00ffffff, 0},
{GWl, 1, "", 0x64e04, 0x0006000e, 0},
{GWl, 1, "", 0x64e08, 0x00d75fff, 0},
{GWl, 1, "", 0x64e0c, 0x0005000a, 0},
{GWl, 1, "", 0x64e10, 0x00c30fff, 0},
{GWl, 1, "", 0x64e14, 0x00040006, 0},
{GWl, 1, "", 0x64e18, 0x80aaafff, 0},
{GWl, 1, "", 0x64e1c, 0x000b0000, 0},
{GWl, 1, "", 0x64e20, 0x00ffffff, 0},
{GWl, 1, "", 0x64e24, 0x0005000a, 0},
{GWl, 1, "", 0x64e28, 0x00d75fff, 0},
{GWl, 1, "", 0x64e2c, 0x000c0004, 0},
{GWl, 1, "", 0x64e30, 0x80c30fff, 0},
{GWl, 1, "", 0x64e34, 0x000b0000, 0},
{GWl, 1, "", 0x64e38, 0x00ffffff, 0},
{GWl, 1, "", 0x64e3c, 0x00040006, 0},
{GWl, 1, "", 0x64e40, 0x80d75fff, 0},
{GWl, 1, "", 0x64e44, 0x000b0000, 0},
{GWl, 1, "", 0x64e48, 0x00ffffff, 0},
{GWl, 1, "", 0x64e4c, 0x00040006, 0},
{GWl, 1, "", 0x64e60, 0x00ffffff, 0},
{GWl, 1, "", 0x64e64, 0x0006000e, 0},
{GWl, 1, "", 0x64e68, 0x00d75fff, 0},
{GWl, 1, "", 0x64e6c, 0x0005000a, 0},
{GWl, 1, "", 0x64e70, 0x00c30fff, 0},
{GWl, 1, "", 0x64e74, 0x00040006, 0},
{GWl, 1, "", 0x64e78, 0x80aaafff, 0},
{GWl, 1, "", 0x64e7c, 0x000b0000, 0},
{GWl, 1, "", 0x64e80, 0x00ffffff, 0},
{GWl, 1, "", 0x64e84, 0x0005000a, 0},
{GWl, 1, "", 0x64e88, 0x00d75fff, 0},
{GWl, 1, "", 0x64e8c, 0x000c0004, 0},
{GWl, 1, "", 0x64e90, 0x80c30fff, 0},
{GWl, 1, "", 0x64e94, 0x000b0000, 0},
{GWl, 1, "", 0x64e98, 0x00ffffff, 0},
{GWl, 1, "", 0x64e9c, 0x00040006, 0},
{GWl, 1, "", 0x64ea0, 0x80d75fff, 0},
{GWl, 1, "", 0x64ea4, 0x000b0000, 0},
{GWl, 1, "", 0x64ea8, 0x00ffffff, 0},
{GWl, 1, "", 0x64eac, 0x00040006, 0},
{GWl, 1, "", 0x64ec0, 0x00ffffff, 0},
{GWl, 1, "", 0x64ec4, 0x0006000e, 0},
{GWl, 1, "", 0x64ec8, 0x00d75fff, 0},
{GWl, 1, "", 0x64ecc, 0x0005000a, 0},
{GWl, 1, "", 0x64ed0, 0x00c30fff, 0},
{GWl, 1, "", 0x64ed4, 0x00040006, 0},
{GWl, 1, "", 0x64ed8, 0x80aaafff, 0},
{GWl, 1, "", 0x64edc, 0x000b0000, 0},
{GWl, 1, "", 0x64ee0, 0x00ffffff, 0},
{GWl, 1, "", 0x64ee4, 0x0005000a, 0},
{GWl, 1, "", 0x64ee8, 0x00d75fff, 0},
{GWl, 1, "", 0x64eec, 0x000c0004, 0},
{GWl, 1, "", 0x64ef0, 0x80c30fff, 0},
{GWl, 1, "", 0x64ef4, 0x000b0000, 0},
{GWl, 1, "", 0x64ef8, 0x00ffffff, 0},
{GWl, 1, "", 0x64efc, 0x00040006, 0},
{GWl, 1, "", 0x64f00, 0x80d75fff, 0},
{GWl, 1, "", 0x64f04, 0x000b0000, 0},
{GWl, 1, "", 0x64f08, 0x00ffffff, 0},
{GWl, 1, "", 0x64f0c, 0x00040006, 0},
{GWl, 1, "", 0x64f20, 0x00ffffff, 0},
{GWl, 1, "", 0x64f24, 0x0006000e, 0},
{GWl, 1, "", 0x64f28, 0x00d75fff, 0},
{GWl, 1, "", 0x64f2c, 0x0005000a, 0},
{GWl, 1, "", 0x64f30, 0x00c30fff, 0},
{GWl, 1, "", 0x64f34, 0x00040006, 0},
{GWl, 1, "", 0x64f38, 0x80aaafff, 0},
{GWl, 1, "", 0x64f3c, 0x000b0000, 0},
{GWl, 1, "", 0x64f40, 0x00ffffff, 0},
{GWl, 1, "", 0x64f44, 0x0005000a, 0},
{GWl, 1, "", 0x64f48, 0x00d75fff, 0},
{GWl, 1, "", 0x64f4c, 0x000c0004, 0},
{GWl, 1, "", 0x64f50, 0x80c30fff, 0},
{GWl, 1, "", 0x64f54, 0x000b0000, 0},
{GWl, 1, "", 0x64f58, 0x00ffffff, 0},
{GWl, 1, "", 0x64f5c, 0x00040006, 0},
{GWl, 1, "", 0x64f60, 0x80d75fff, 0},
{GWl, 1, "", 0x64f64, 0x000b0000, 0},
{GWl, 1, "", 0x64f68, 0x00ffffff, 0},
{GWl, 1, "", 0x64f6c, 0x00040006, 0},
{GWl, 1, "", 0x64f80, 0x00ffffff, 0},
{GWl, 1, "", 0x64f84, 0x0007000e, 0},
{GWl, 1, "", 0x64f88, 0x00d75fff, 0},
{GWl, 1, "", 0x64f8c, 0x000f000a, 0},
{GWl, 1, "", 0x64f90, 0x00c30fff, 0},
{GWl, 1, "", 0x64f94, 0x00060006, 0},
{GWl, 1, "", 0x64f98, 0x00aaafff, 0},
{GWl, 1, "", 0x64f9c, 0x001e0000, 0},
{GWl, 1, "", 0x64fa0, 0x00ffffff, 0},
{GWl, 1, "", 0x64fa4, 0x000f000a, 0},
{GWl, 1, "", 0x64fa8, 0x00d75fff, 0},
{GWl, 1, "", 0x64fac, 0x00160004, 0},
{GWl, 1, "", 0x64fb0, 0x00c30fff, 0},
{GWl, 1, "", 0x64fb4, 0x001e0000, 0},
{GWl, 1, "", 0x64fb8, 0x00ffffff, 0},
{GWl, 1, "", 0x64fbc, 0x00060006, 0},
{GWl, 1, "", 0x64fc0, 0x00d75fff, 0},
{GWl, 1, "", 0x64fc4, 0x001e0000, 0},
{GWl, 1, "", 0x64fc8, 0x00ffffff, 0},
{GWl, 1, "", 0x64fcc, 0x00040006, 0},
{GWl, 1, "", WM3_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM2_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM1_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", 0x9404, 0x00002000, 0},
{GWl, 1, "", 0xb01c, 0x3c4fff8c, 0},
{GWl, 1, "", GEN7_L3_CHICKEN_MODE_REGISTER, 0x20000000, 0},
{GRl, 1, "", GEN7_SQ_CHICKEN_MBCUNIT_CONFIG, 0x00000c00, 0},
{GWl, 1, "", GEN7_SQ_CHICKEN_MBCUNIT_CONFIG, 0x00000c00, 0},
{GRl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)|0x94000000, 0},
{GWl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x94004000, 0},
{GRl, 1, "", _DSPASIZE+0xc, 0x00000000, 0},
{GWl, 1, "", _DSPASIZE+0xc, 0x00000000, 0},
{GRl, 1, "", _DSPBCNTR, 0x00000000, 0},
{GWl, 1, "", _DSPBCNTR, 0x00004000, 0},
{GRl, 1, "", _DSPBSURF, 0x00000000, 0},
{GWl, 1, "", _DSPBSURF, 0x00000000, 0},
{GRl, 1, "", _DVSACNTR, 0x00000000, 0},
{GWl, 1, "", _DVSACNTR,  DVS_TRICKLE_FEED_DISABLE |0x00004000, 0},
{GRl, 1, "", _DVSASURF, 0x00000000, 0},
{GWl, 1, "", _DVSASURF, 0x00000000, 0},
{GRl, 1, "", GEN6_MBCTL, 0x00000000, 0},
{GWl, 1, "", GEN6_MBCTL, 0x00000010, 0},
{GRl, 1, "", 0x45280, 0x80000000, 0},
{GWl, 1, "", 0x45280, 0x80000007, 0},
{GRl, 1, "", SOUTH_DSPCLK_GATE_D, 0x00000000, 0},
{GWl, 1, "", SOUTH_DSPCLK_GATE_D, 0x00001000, 0},
{GRl, 1, "", 0x6f400, 0x82034002, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEBCONF, 0x00000000, 0},
{GRl, 1, "", 0x72008, 0x00000000, 0},
{GRl, 1, "", 0x46100, 0x20000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 1, "", 0x6f400, 0x82034002, 0},
{GRl, 1, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 2, "", 0x6f400, 0x82034002, 0},
{GRl, 2, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 2, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GWl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEBCONF, 0x00000000, 0},
{GWl, 1, "", _PIPEBCONF, 0x00000000, 0},
{GRl, 1, "", 0x72008, 0x00000000, 0},
{GWl, 1, "", 0x72008, 0x00000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 2, "", 0x6f400, 0x82034002, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 1, "", 0x6f400, 0x82034002, 0},
{GRl, 2, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 2, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GRl, 1, "", 0x6f400, 0x82034002, 0},
{GRl, 1, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEBCONF, 0x00000000, 0},
{GRl, 1, "", 0x72008, 0x00000000, 0},
{GWl, 1, "", DEIMR, 0xffffffff, 0},
{GWl, 1, "", DEIER, 0x00000000, 0},
{GWl, 1, "", GTIMR, 0xffffffff, 0},
{GWl, 1, "", GTIER, 0x00000000, 0},
{GWl, 1, "", SDEIMR, 0xffffffff, 0},
{GWl, 1, "", SDEIER, 0x00000000, 0},
{GWl, 1, "", DEIMR, 0x4fffdef7, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GRl, 1, "", GTIIR, 0x00000000, 0},
{GWl, 1, "", GTIIR, 0x00000000, 0},
{GWl, 1, "", GTIMR, 0xffffffdf, 0},
{GWl, 1, "", GTIER, 0x00401021, 0},
{GWl, 1, "", SDEIMR, 0xff17ffff, 0},
{GWl, 1, "", SDEIER, 0x00e80000, 0},
{GRl, 1, "", SDEISR+0x30,  PORTC_HOTPLUG_ENABLE | PORTB_HOTPLUG_ENABLE |0x10001010, 0},
{GWl, 1, "", SDEISR+0x30,  PORTD_HOTPLUG_ENABLE | PORTC_HOTPLUG_ENABLE | PORTB_HOTPLUG_ENABLE |0x10101010, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529, 0},
{GRl, 1, "", GTIIR, 0x00000000, 0},
{GRl, 1, "", GEN6_PMIIR, 0x00000000, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GRl, 1, "", PCH_RAWCLK_FREQ, ( FDL_TP1_TIMER_SHIFT &0x8)|0x00000018, 0},
{GWl, 1, "", 0x101008, 0x00000001, 0},
{M, 1, " M fbcon inteldrmfb (fb0) is primary device", 0x0, 0x0, 0},
{GRl, 1, "", BLC_PWM_CPU_CTL, 0x03a903a9, 0},
{GWl, 1, "", BLC_PWM_CPU_CTL, 0x03a90000, 0},
{GRl, 1, "", BLC_PWM_CPU_CTL2,  PWM_ENABLE |0x80000000, 0},
{GWl, 1, "", BLC_PWM_CPU_CTL2, 0x00000000, 0},
{GRl, 1, "", BLC_PWM_PCH_CTL1,  PWM_PCH_ENABLE |0x80000000, 0},
{GWl, 1, "", BLC_PWM_PCH_CTL1, 0x00000000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000f, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000b, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001fa, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001fa, 0},
{GRl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x94004000, 0},
{GWl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x14004000, 0},
{GRl, 1, "", _DSPASIZE+0xc, 0x00000000, 0},
{GWl, 1, "", _DSPASIZE+0xc, 0x00000000, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001fa, 0},
{GRl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529, 0},
{GRl, 1, "", GTIIR, 0x00000000, 0},
{GRl, 1, "", GEN6_PMIIR, 0x00000000, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GRl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x14004000, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GWl, 1, "", 0x7f008, 0x40000000, 0},
{GRl, 2, "", 0x7f008, 0x40000000, 0},
{GRl, 1, "", 0x7f008, 0x00000000, 0},
{GRl, 1, "", 0x6f400, 0x82034002, 0},
{GWl, 1, "", 0x6f400, 0x02034002, 0},
{GWl, 1, "", _PFA_CTL_1, 0x00000000, 0},
{GWl, 1, "", _PFA_WIN_SZ, 0x00000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x80000013, 0},
{GWl, 1, "", DP_A,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SYNC_VS_HIGH |0x00000013, 0},
{GRl, 1, "", DP_A+0x40, 0x80000300, 0},
{GWl, 1, "", DP_A+0x40, 0x00000000, 0},
{GRl, 1, "", DP_A,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ | DP_SCRAMBLING_DISABLE_IRONLAKE | DP_SYNC_VS_HIGH |0x00000093, 0},
{GRl, 2, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000b, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)|0xabcd0000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)|0xabcd0000, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_DOWN | /*undocbit1*/2 | /*undocbit0*/1 |0xa0000003, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_DOWN | /*undocbit1*/2 |0xa0000002, 0},
{GRl, 2, "", PCH_PP_STATUS,  PP_CYCLE_DELAY_ACTIVE | /*undocbit0*/1 |0x08000001, 0},
{M, 1, " M tsc Refined TSC clocksource calibration: 1296.997 MHz", 0x0, 0x0, 0},
{M, 1, " M Switching to clocksource tsc", 0x0, 0x0, 0},
{GRl, 2, "", PCH_PP_STATUS,  PP_CYCLE_DELAY_ACTIVE | /*undocbit0*/1 |0x08000001, 0},
{GRl, 1, "", PCH_PP_STATUS, 0x00000000, 0},
{GWl, 1, "", 0x46100, 0xe0000000, 0},
{GRl, 1, "", 0x145d10, 0x05a2404f, 0},
{GWl, 1, "", WM3_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM2_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM1_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GRl, 2, "", 0x7f008, 0x00000000, 0},
{GRl, 1, "", _DSPACNTR, ( DISPPLANE_16BPP &0x14000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x14004000, 0},
{GWl, 1, "", 0x6f028, 0x00000000, 0},
{GWl, 1, "", 0x6f000, 0x081f077f, 0},
{GWl, 1, "", 0x6f004, 0x081f077f, 0},
{GWl, 1, "", 0x6f008, 0x07cb07ad, 0},
{GWl, 1, "", 0x6f00c, 0x04570437, 0},
{GWl, 1, "", 0x6f010, 0x04570437, 0},
{GWl, 1, "", 0x6f014, 0x043d0439, 0},
{GWl, 1, "", _PIPEASRC, 0x077f0437, 0},
{GWl, 1, "", 0x6f030, 0x7e32d2a0, 0},
{GWl, 1, "", 0x6f034, 0x0041eb00, 0},
{GWl, 1, "", 0x6f040, 0x00021e1c, 0},
{GWl, 1, "", 0x6f044, 0x00041eb0, 0},
{GRl, 1, "", 0x7f008, 0x00000000, 0},
{GWl, 1, "", 0x7f008, 0x00000000, 0},
{GWl, 1, "", _DSPACNTR,  DISPPLANE_GAMMA_ENABLE |(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)|0x40000000, 0},
{GRl, 1, "", _DSPACNTR,  DISPPLANE_GAMMA_ENABLE |(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)|0x40000000, 0},
{GWl, 1, "", _DSPACNTR,  DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x58004000, 0},
{GWl, 1, "", _DSPASTRIDE, 0x00001e00, 0},
{GRl, 1, "", _DSPASIZE+0xc, 0x00000000, 0},
{GWl, 1, "", _DSPASIZE+0xc, 0x00074000, 0},
{GWl, 1, "", _DSPACNTR+0x24, 0x00000000, 0},
{GRl, 1, "", 0x145d10, 0x05a2404f, 0},
{GWl, 1, "", WM3_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM2_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM1_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GRl, 1, "", WM0_PIPEC_IVB+0x70, 0x00000000, 0},
{GWl, 1, "", WM0_PIPEC_IVB+0x70, 0x00000038, 0},
{GRl, 1, "", 0x145d10, 0x05a2404f, 0},
{GRl, 1, "", WM0_PIPEA_ILK, 0x00783818, 0},
{GWl, 1, "", WM0_PIPEA_ILK, 0x000f3806, 0},
{GWl, 1, "", WM3_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM2_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GWl, 1, "", WM1_LP_ILK, (/* WMx_LP_LATENCY */0x0<<24)|(/* WMx_LP_FBC */0x0<<20)|(/* WMx_LP_SR */0x0<<8)|(/* WMx_LP_CURSOR */0x0<<0)|0x00000000, 0},
{GRl, 1, "", 0x145d10, 0x05a2404f, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)|0xabcd0000, 0},
{GRl, 1, "", PCH_PP_STATUS, 0x00000000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)|0xabcd0000, 0},
{GRl, 2, "", PCH_PP_STATUS, 0x00000000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)|0xabcd0000, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD |0xabcd0008, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD |0xabcd0008, 0},
{GRl, 2, "", PCH_PP_STATUS, 0x00000000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD |0xabcd0008, 0},
{GRl, 2, "", PCH_PP_STATUS, 0x00000000, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD |0xabcd0008, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000b, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000b, 0},
{GRl, 2, "", PCH_PP_STATUS,  /*undocbit3*/8 | /*undocbit1*/2 |0x0000000a, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_UP | /*undocbit3*/8 | /*undocbit1*/2 |0x9000000a, 0},
{GWl, 1, "", 0xa094, 0x00000000, 0},
{GRl, 1, "", 0x120000, 0x00000000, 0},
{GRl, 1, "", 0x145998, 0x00040414, 0},
{GRl, 1, "", 0x145948, 0x0000106b, 0},
{GWl, 1, "", 0xa090, 0x00000000, 0},
{GWl, 1, "", 0xa098, 0x03e80000, 0},
{GWl, 1, "", 0xa09c, 0x0028001e, 0},
{GWl, 1, "", 0xa0a0, 0x0000001e, 0},
{GWl, 1, "", 0xa0a8, 0x0001e848, 0},
{GWl, 1, "", 0xa0ac, 0x00000019, 0},
{GWl, 1, "", GEN6_BSD_SLEEP_PSMI_CONTROL+0x4, 0x0000000a, 0},
{GWl, 1, "", BLT_RING_BASE+0x54, 0x0000000a, 0},
{GWl, 1, "", 0xa0b0, 0x00000000, 0},
{GWl, 1, "", 0xa0b4, 0x000003e8, 0},
{GWl, 1, "", 0xa0b8, 0x0000c350, 0},
{GWl, 1, "", 0xa0bc, 0x000186a0, 0},
{GWl, 1, "", 0xa0c0, 0x0000fa00, 0},
{M, 1, " M [drm] Enabling RC6 states RC6 on, RC6p off, RC6pp off", 0x0, 0x0, 0},
{GWl, 1, "", 0xa090, 0x88040000, 0},
{GWl, 1, "", _PALETTE_A+0x8, 0x14000000, 0},
{GWl, 1, "", _PALETTE_A+0xc, 0x18000000, 0},
{GWl, 1, "", _PALETTE_A+0x10, 0x000f4240, 0},
{GWl, 1, "", _PALETTE_A+0x14, 0x14040000, 0},
{GWl, 1, "", _PALETTE_A+0x2c, 0x0000e808, 0},
{GWl, 1, "", _PALETTE_A+0x30, 0x0003bd08, 0},
{GWl, 1, "", _PALETTE_A+0x68, 0x000101d0, 0},
{GWl, 1, "", _PALETTE_A+0x6c, 0x00055730, 0},
{GWl, 1, "", _PALETTE_A+0x70, 0x0000000a, 0},
{GWl, 1, "", _PALETTE_A+0x24, 0x00000d92, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000010, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000010, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GWl, 1, "", 0x138124, 0x8000000c, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GRl, 1, "", 0x138128, 0x80000014, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GWl, 1, "", _PALETTE_A+0x8, 0x20000000, 0},
{GWl, 1, "", _PALETTE_A+0x14, 0x14000000, 0},
{GWl, 1, "", GEN6_PMIER,  GEN6_PM_RP_DOWN_TIMEOUT | GEN6_PM_RP_UP_THRESHOLD | GEN6_PM_RP_DOWN_THRESHOLD |0x00000070, 0},
{GWl, 1, "", GEN6_PMISR+0x4, 0x00000000, 0},
{GWl, 1, "", 0xa168, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GWl, 1, "", 0x138124, 0x80000005, 0},
{GRl, 1, "", 0x138124, 0x80000005, 0},
{GRl, 1, "", 0x138124, 0x00000001, 0},
{GRl, 1, "", 0x138128, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000001, 0},
{GWl, 1, "", 0x138128, 0x00000d14, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000c13, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000b12, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000a11, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000910, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_UP | /*undocbit3*/8 | /*undocbit1*/2 |0x9000000a, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080f, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080e, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080d, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080c, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080b, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x0000080a, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000809, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000808, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000807, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_UP | /*undocbit3*/8 | /*undocbit1*/2 |0x9000000a, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000806, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000805, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000804, 0},
{GWl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x80000008, 0},
{GRl, 1, "", 0x138124, 0x00000000, 0},
{GWl, 1, "", 0x138128, 0x00000000, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | PP_SEQUENCE_POWER_UP | /*undocbit3*/8 | /*undocbit1*/2 |0x9000000a, 0},
{GRl, 1, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 2, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_FORCE_VDD | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd000b, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0003, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0003, 0},
{GRl, 1, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GWl, 1, "", 0x46100, 0x20000000, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,141},
{GRl, 1, "", DP_A+0x40, 0x00000000, 0},
{GWl, 1, "", DP_A+0x40, 0x80000080, 0},
{GWl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,142},
{GRl, 1, "", DP_A+0x40, 0x80000080, 0},
{GWl, 1, "", DP_A+0x40, 0x80000080, 0},
{GWl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,143},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,144},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,145},
{GRl, 1, "", DP_A+0x40, 0x80000080, 0},
{GWl, 1, "", DP_A+0x40, 0x80000180, 0},
{GWl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,146},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,147},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,148},
{GRl, 1, "", DP_A+0x40, 0x80000180, 0},
{GWl, 1, "", DP_A+0x40, 0x80000200, 0},
{GRl, 2, "", DP_A+0x44, 0x00000000, 0},
{M, 1, " M [drmintel_dp_set_link_train] *ERROR* Timed out waiting for DP idle patterns", 0x0, 0x0, 0},
{M, 1, " M [drmi915_write32] *ERROR* Unknown unclaimed register before writing to 64040", 0x0, 0x0, 0},
{GWl, 1, "", DP_A+0x40, 0x80000300, 0},
{GWl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000002, 0},
{GRl, 2, "", PCH_PP_STATUS, PP_ON | /*undocbit3*/8 |0x80000008, 0},
{GRl, 1, "", ILK_DISPLAY_CHICKEN_FUSES,  ILK_DISPLAY_DEBUG_DISABLE | ILK_eDP_A_DISABLE |0x21000002, 0},
{I,149},
{P,},
{GWl, 1, "", 0x6f410, 0x00000021, 0},
{GWl, 1, "", 0x6f400, 0x82004002, 0},
{GRl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529, 0},
{GRl, 1, "", GTIIR, 0x00000000, 0},
{GRl, 1, "", GEN6_PMIIR, 0x00000004, 0},
{GWl, 1, "", GEN6_PMIIR, 0x00000004, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GRl, 1, "", 0x7f008, 0x00000000, 0},
{GWl, 1, "", 0x7f008, 0x80000000, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001fd, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _DSPACNTR,  DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0x58004000, 0},
{GWl, 1, "", _DSPACNTR,  DISPPLANE_GAMMA_ENABLE |( DISPPLANE_32BPP_NO_ALPHA &0x18000000)|(/* DISPPLANE_SEL_PIPE(0=A,1=B) */0x0<<24)| DISPPLANE_TRICKLE_FEED_DISABLE /* Ironlake */ |0xd8004000, 0},
{GRl, 1, "", _DSPASIZE+0xc, 0x00074000, 0},
{GWl, 1, "", _DSPASIZE+0xc, 0x00074000, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001fe, 0},
{GRl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0x30002529, 0},
{GRl, 1, "", GTIIR, 0x00000000, 0},
{GRl, 1, "", GEN6_PMIIR, 0x00000004, 0},
{GWl, 1, "", GEN6_PMIIR, 0x00000004, 0},
{GWl, 1, "", DEIER,  GT_USER_INTERRUPT | GT_BSD_USER_INTERRUPT |0xb0002529, 0},
{GRl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0003, 0},
{GWl, 1, "", PCH_PP_CONTROL, (PCH_PP_UNLOCK&0xabcd0000)| EDP_BLC_ENABLE | PANEL_POWER_RESET | PANEL_POWER_ON |0xabcd0007, 0},
{GRl, 1, "", BLC_PWM_CPU_CTL2, 0x00000000, 0},
{GWl, 1, "", BLC_PWM_CPU_CTL2, 0x00000000, 0},
{GWl, 1, "", BLC_PWM_CPU_CTL2,  PWM_ENABLE |0x80000000, 0},
{GRl, 1, "", BLC_PWM_PCH_CTL1, 0x00000000, 0},
{GWl, 1, "", BLC_PWM_PCH_CTL1,  PWM_PCH_ENABLE |0x80000000, 0},
{GRl, 1, "", BLC_PWM_CPU_CTL, 0x03a90000, 0},
{GWl, 1, "", BLC_PWM_CPU_CTL, 0x03a903a9, 0},
{GRl, 1, "", _PIPEA_FRMCOUNT_GM45, 0x000001ff, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000003, 0},
{GRl, 2, "", 0x6f400, 0x82004002, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000003, 0},
{GRl, 1, "", 0x6f400, 0x82004002, 0},
{GRl, 2, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 2, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_A,  DP_PORT_EN | DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x80000003, 0},
{GRl, 1, "", 0x6f400, 0x82004002, 0},
{GRl, 1, "", DP_B,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", DP_C,  DP_LINK_TRAIN_PAT_1 | DP_LINK_TRAIN_PAT_1_CPT | DP_VOLTAGE_0_4 | DP_PRE_EMPHASIS_0 | DP_PORT_WIDTH_1 | DP_PLL_FREQ_270MHZ |0x00000000, 0},
{GRl, 1, "", 0x7f008, 0xc0000000, 0},
{GRl, 1, "", _PIPEBCONF, 0x00000000, 0},
{GRl, 1, "", 0x72008, 0x00000000, 0},
{P,},
{M, 1, " M Console switching to colour frame buffer device 240x67", 0x0, 0x00000000, 0},
{P,},
{M, 1, " M i915 000000:02.0: fb0: inteldrmfb frame buffer device", 0x0, 0x00000000, 0},
{M, 1, " M i915 000000:02.0: registered panic notifier", 0x0, 0x0, 0},
{M, 1, " M [drm] Initialized i915 1.6.0 20080730 for 000000:02.0 on minor 0", 0x0, 0x0, 0},
{I, 0, "", 0x0, 0x0, 0},
{I,1},
};

  int niodefs = sizeof(iodefs)/sizeof(iodefs[0]);


void runio(u32 aux_ctl, u32 aux_data)
{
	int index;	u32 auxout[16];
	u8 auxin[20];
	index = run(0);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x0<<8|0x0|0x40000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x0<<28/*W*/|0x0<<8|0x0|0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 14);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	auxout[1] = 0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x1<<28/*R*/|0x50<<8|0x0|0x10005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x0<<28/*W*/|0x50<<8|0x0|0x40005000;
	auxout[1] = 0x00000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|1<<30|0x1<<28/*R*/|0x50<<8|0x0|0x50005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 0);
	index = run(index);
	auxout[0] = 0<<31 /* i2c */|0<<30|0x1<<28/*R*/|0x50<<8|0x0|0x10005000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 3, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_SET_POWER<<8|0x0|0x80060000;
	auxout[1] = 0x01000000;
	/* DP_SET_POWER_D0 | DP_PSR_SINK_INACTIVE |0x00000001*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_LINK_BW_SET<<8|0x8|0x80010008;
	auxout[1] = 0x0a020000;
	/*( DP_LINK_BW_2_7 &0xa)|0x0000020a*/
	auxout[2] = 0x00000000;
	auxout[3] = 0x01000000;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 13, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
	auxout[1] = 0x21000000;
	/* DP_TRAINING_PATTERN_1 | DP_LINK_SCRAMBLING_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000021*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_LANE0_SET<<8|0x1|0x80010301;
	auxout[1] = 0x00000000;
	/* DP_TRAIN_VOLTAGE_SWING_400 | DP_TRAIN_PRE_EMPHASIS_0 |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 6, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x1<<28/*R*/|DP_LANE0_1_STATUS<<8|0x5|0x90020205;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 5);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
	auxout[1] = 0x22000000;
	/* DP_TRAINING_PATTERN_2 | DP_LINK_SCRAMBLING_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000022*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_LANE0_SET<<8|0x1|0x80010301;
	auxout[1] = 0x00000000;
	/* DP_TRAIN_VOLTAGE_SWING_400 | DP_TRAIN_PRE_EMPHASIS_0 |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 6, auxin, 0);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x1<<28/*R*/|DP_LANE0_1_STATUS<<8|0x5|0x90020205;
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 4, auxin, 5);
	index = run(index);
	auxout[0] = 1<<31 /* dp */|0x0<<28/*W*/|DP_TRAINING_PATTERN_SET<<8|0x0|0x80010200;
	auxout[1] = 0x00000000;
	/* DP_TRAINING_PATTERN_DISABLE | DP_LINK_QUAL_PATTERN_DISABLE | DP_SYMBOL_ERROR_COUNT_BOTH |0x00000000*/
	intel_dp_aux_ch(aux_ctl, aux_data, auxout, 5, auxin, 0);
	index = run(index);
}
